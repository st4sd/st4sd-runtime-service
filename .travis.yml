language: python

services:
  - docker

install: echo "no install"

stages:
  - name: test
    if: tag IS blank
  - name: image
    if: branch = main AND type != pull_request
  - name: multiarch
    if: branch = main AND type != pull_request
  - name: deploy-to-dev
    if: branch = main AND type != pull_request
  - name: new-git-release
    if: tag is present

before_script:
  - export DOCKER_REGISTRY=${DOCKER_REGISTRY:-quay.io}
  - export IMAGE_NAME=${IMAGE_NAME:-/st4sd/official-base/st4sd-runtime-service}
  - export IMAGE_BASE_URL="${DOCKER_REGISTRY}${IMAGE_NAME}"
  - export RUNTIMECORE_IMAGE_NAME=${ROOT_IMAGE_NAME:-/st4sd/official-base/st4sd-runtime-core}
  - export RUNTIMECORE_URL="${DOCKER_REGISTRY}${RUNTIMECORE_IMAGE_NAME}"

matrix:
  include:
    - stage: test
      services:
        - docker
      script:
        - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_TOKEN}" "${DOCKER_REGISTRY}"
        - docker build -t ${IMAGE_BASE_URL}:latest --build-arg base_image=${RUNTIMECORE_URL}:latest -f Dockerfile .
        - docker build -t ${IMAGE_BASE_URL}:test --build-arg base_image=${IMAGE_BASE_URL}:latest -f Dockerfile.test .
    - stage: image
      script:
        - docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_TOKEN}" "${DOCKER_REGISTRY}"
        - docker build --pull -t ${IMAGE_BASE_URL}:latest-`arch` -f Dockerfile .
          --build-arg base_image=${RUNTIMECORE_URL}
        - docker push ${IMAGE_BASE_URL}:latest-`arch`

      # VV: Disabling PPC64LE builds for now
      #- stage: image
      #  os: linux-ppc64le
      #  script:
      #- docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_TOKEN}" "${DOCKER_REGISTRY}"
      #- docker build --pull -t ${IMAGE_BASE_URL}:latest-`arch` -f Dockerfile .
      #  --build-arg base_image=${RUNTIMECORE_URL}
      #- docker push ${IMAGE_BASE_URL}:latest-`arch`

    - stage: multiarch
      script:
        - export SRC_TAG_X8664="latest-x86_64"
        - export DST_TAG_X8664="x86_64"
        # VV: Disable ppc64le builds for now
        #- export SRC_TAG_PPC64LE="latest-ppc64le"
        #- export DST_TAG_PPC64LE="ppc64le"
        - export LABEL="latest"
        - ./deploy/build_multiarch.sh

    - stage: deploy-to-dev
      os: linux
      env:
        DEPLOY_TO="ve-5446-dev"
      script:
        - ./deploy/redeploy_deploymentconfig.sh
          "${VE_5446_DEV_PROJECT}" "${VE_5446_DEV_LOGIN_URL}" "${VE_5446_DEV_LOGIN_TOKEN}"

    - stage: new-git-release
      os: linux
      services: docker
      script:
        - export DOCKER_CLI_EXPERIMENTAL=enabled
        - docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN $DOCKER_REGISTRY
        - docker manifest create ${IMAGE_BASE_URL}:${TRAVIS_TAG}
          ${IMAGE_BASE_URL}:x86_64 # ${IMAGE_BASE_URL}:ppc64le
        - docker manifest push ${IMAGE_BASE_URL}:${TRAVIS_TAG}
        - docker manifest create ${IMAGE_BASE_URL}:release-candidate
          ${IMAGE_BASE_URL}:x86_64 # ${IMAGE_BASE_URL}:ppc64le
        - docker manifest push ${IMAGE_BASE_URL}:release-candidate
